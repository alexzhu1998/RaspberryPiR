* using log directory ‘/home/pi/Honours/RaspberryPiR/..Rcheck’
* using R version 4.0.3 (2020-10-10)
* using platform: armv7l-unknown-linux-gnueabihf (32-bit)
* using session charset: UTF-8
* using option ‘--as-cran’
* checking for file ‘./DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘RaspberryPiR’ version ‘1.0’
* checking CRAN incoming feasibility ... NOTE
Maintainer: ‘Alex Zhu <alexjhzhu@gmail.com>’

New submission

The Description field should not start with the package name,
  'This package' or similar.

The Date field is over a month old.

The build time stamp is missing.
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... WARNING
Subdirectory ‘RaspberryPiR/src’ contains apparent object files/libraries
  RaspberryPiR.so RcppExports.o shmem_user.o testingSensor.o
  wiringPiLib.o
Object files/libraries should not be included in a source package.

In addition to the above warning(s), found the following notes:

Found the following apparent object files/libraries:
  RaspberryPiR.Rcheck/RaspberryPiR/libs/RaspberryPiR.so
  src/Tester.Rcheck/Tester/libs/Tester.so src/utils/DHT11.o
  src/utils/MQ2.o src/utils/PhotoRes.o src/utils/RPiCam.o
  src/utils/sensors_control.o src/utils/shared_memory.o
Object files/libraries should not be included in a source package.

Subdirectory ‘RaspberryPiR.Rcheck/RaspberryPiR’ seems to contain an installed version of the package.
* checking if there is a namespace ... OK
* checking for executable files ... WARNING
Found the following executable files:
  RaspberryPiR.Rcheck/RaspberryPiR/libs/RaspberryPiR.so
  src/RaspberryPiR.so
  src/Tester.Rcheck/Tester/libs/Tester.so
Source packages should not contain undeclared executable files.
See section ‘Package structure’ in the ‘Writing R Extensions’ manual.
* checking for hidden files and directories ... NOTE
Found the following hidden files and directories:
  .DS_Store
  .gitignore
  R/.DS_Store
  ..Rcheck
  .git
These were most likely included in error. See section ‘Package
structure’ in the ‘Writing R Extensions’ manual.

CRAN-pack does not know about
  .DS_Store
  R/.DS_Store
  ..Rcheck
  .git
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... WARNING
Found file(s) with version 3 serialization:
  ‘RaspberryPiR.Rcheck/RaspberryPiR/help/aliases.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/help/paths.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/help/RaspberryPiR.rdx’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/Meta/demo.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/Meta/features.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/Meta/hsearch.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/Meta/links.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/Meta/nsInfo.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/Meta/package.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/Meta/Rd.rds’
  ‘RaspberryPiR.Rcheck/RaspberryPiR/R/RaspberryPiR.rdx’
Such files are only readable in R >= 3.5.0.
Recreate them with R < 3.5.0 or save(version = 2) or saveRDS(version =
2) as appropriate
* checking whether package ‘RaspberryPiR’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... NOTE
Checking should be performed on sources prepared by ‘R CMD build’.
* checking top-level files ... NOTE
Files ‘README.md’ or ‘NEWS.md’ cannot be checked without ‘pandoc’ being installed.
Non-standard files/directories found at top level:
  ‘compile’ ‘RaspberryPiR.Rcheck’ ‘RaspberryPiR.Rproj’
  ‘Read-and-delete-me’
* checking for left-over files ... OK
* checking index information ... WARNING
Empty or missing file ‘demo/00Index’.
See sections ‘The INDEX file’ and ‘Package subdirectories’ in the
‘Writing R Extensions’ manual.
* checking package subdirectories ... WARNING
Found the following directories with names of check directories:
  ./..Rcheck
  ./RaspberryPiR.Rcheck
  ./src/Tester.Rcheck
Most likely, these were included erroneously.
Found the following directory with the name of a version control directory:
  ./.git
These should not be in a package tarball.
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘DHT11_freeMemory’ ‘DHT11_readMemory’ ‘DHT11_scanPointer’
  ‘listActive’ ‘LL_digitalRead’ ‘LL_digitalWrite’ ‘LL_micros’
  ‘LL_millis’ ‘LL_pinMode’ ‘LL_pullUpDnControl’ ‘LL_wiringPiSetup’
  ‘MQ2_freeMemory’ ‘MQ2_readMemory’ ‘MQ2_scanPointer’ ‘MQ2_writeMemory’
  ‘PhotoRes_freeMemory’ ‘PhotoRes_readMemory’ ‘PhotoRes_scanPointer’
  ‘PhotoRes_writeMemory’ ‘RPiCam_freeMemory’ ‘RPiCam_readMemory’
  ‘RPiCam_scanPointer’ ‘RPiCam_writeMemory’ ‘simpleCapture’
  ‘testing_freeMemory’ ‘testing_readMemory’ ‘testing_writeMemory’
  ‘testingDHT’ ‘testingMQ2’ ‘testingPhotoRes’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... WARNING
Functions or methods with usage in documentation object 'rcpp_hello_world' but not in code:
  ‘rcpp_hello_world’

* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'DHT11_writeMemory'
  ‘timeDelay’ ‘pin’
Documented arguments not in \usage in documentation object 'DHT11_writeMemory':
  ‘v1’ ‘v2’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in shell scripts ... OK
* checking line endings in C/C++/Fortran sources/headers ... NOTE
Found the following sources/headers not terminated with a newline:
  src/testingSensor.cpp
  src/utils/DHT11.cpp
  src/utils/DHT11.h
  src/utils/MQ2.cpp
  src/utils/MQ2.h
  src/utils/PhotoRes.cpp
  src/utils/PhotoRes.h
  src/utils/RPiCam.cpp
  src/utils/RPiCam.h
  src/utils/sensors_control.cpp
  src/utils/sensors_control.h
  src/utils/shared_memory.h
  src/wiringPiLib.cpp
Some compilers warn on such files.
* checking line endings in Makefiles ... NOTE
Found the following Makefile(s) without a final LF:
  src/Makevars
Some ‘make’ programs ignore lines not ending in LF.
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... WARNING
Found the following file(s) containing GNU extensions:
  src/Makevars
Portable Makefiles do not use GNU extensions such as +=, :=, $(shell),
$(wildcard), ifeq ... endif, .NOTPARALLEL See section ‘Writing portable
packages’ in the ‘Writing R Extensions’ manual.
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking use of PKG_*FLAGS in Makefiles ... OK
* checking use of SHLIB_OPENMP_*FLAGS in Makefiles ... OK
* checking pragmas in C/C++ headers and code ... OK
* checking compilation flags used ... OK
* checking compiled code ... WARNING
File ‘RaspberryPiR/libs/RaspberryPiR.so’:
  Found ‘_ZSt4cerr’, possibly from ‘std::cerr’ (C++)
    Object: ‘utils/RPiCam.o’
  Found ‘_ZSt4cout’, possibly from ‘std::cout’ (C++)
    Object: ‘utils/RPiCam.o’
  Found ‘exit’, possibly from ‘exit’ (C)
    Object: ‘utils/shared_memory.o’

Compiled code should not call entry points which might terminate R nor
write to stdout/stderr instead of to the console, nor use Fortran I/O
nor system RNGs.

See ‘Writing portable packages’ in the ‘Writing R Extensions’ manual.
* checking examples ... OK
* checking PDF version of manual ... OK
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 10 WARNINGs, 6 NOTEs
